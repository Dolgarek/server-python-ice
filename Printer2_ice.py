# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `Printer2.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo2
_M_Demo2 = Ice.openModule('Demo2')
__name__ = 'Demo2'

if '_t_strList' not in _M_Demo2.__dict__:
    _M_Demo2._t_strList = IcePy.defineSequence('::Demo2::strList', (), IcePy._t_string)

if '_t_byteSeq' not in _M_Demo2.__dict__:
    _M_Demo2._t_byteSeq = IcePy.defineSequence('::Demo2::byteSeq', (), IcePy._t_byte)

_M_Demo2._t_Printer = IcePy.defineValue('::Demo2::Printer', Ice.Value, -1, (), False, True, None, ())

if 'PrinterPrx' not in _M_Demo2.__dict__:
    _M_Demo2.PrinterPrx = Ice.createTempClass()
    class PrinterPrx(Ice.ObjectPrx):

        def printString(self, s, context=None):
            return _M_Demo2.Printer._op_printString.invoke(self, ((s, ), context))

        def printStringAsync(self, s, context=None):
            return _M_Demo2.Printer._op_printString.invokeAsync(self, ((s, ), context))

        def begin_printString(self, s, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_printString.begin(self, ((s, ), _response, _ex, _sent, context))

        def end_printString(self, _r):
            return _M_Demo2.Printer._op_printString.end(self, _r)

        def renameFile(self, filename, newName, context=None):
            return _M_Demo2.Printer._op_renameFile.invoke(self, ((filename, newName), context))

        def renameFileAsync(self, filename, newName, context=None):
            return _M_Demo2.Printer._op_renameFile.invokeAsync(self, ((filename, newName), context))

        def begin_renameFile(self, filename, newName, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_renameFile.begin(self, ((filename, newName), _response, _ex, _sent, context))

        def end_renameFile(self, _r):
            return _M_Demo2.Printer._op_renameFile.end(self, _r)

        def deleteFile(self, filename, context=None):
            return _M_Demo2.Printer._op_deleteFile.invoke(self, ((filename, ), context))

        def deleteFileAsync(self, filename, context=None):
            return _M_Demo2.Printer._op_deleteFile.invokeAsync(self, ((filename, ), context))

        def begin_deleteFile(self, filename, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_deleteFile.begin(self, ((filename, ), _response, _ex, _sent, context))

        def end_deleteFile(self, _r):
            return _M_Demo2.Printer._op_deleteFile.end(self, _r)

        def getNewIndex(self, context=None):
            return _M_Demo2.Printer._op_getNewIndex.invoke(self, ((), context))

        def getNewIndexAsync(self, context=None):
            return _M_Demo2.Printer._op_getNewIndex.invokeAsync(self, ((), context))

        def begin_getNewIndex(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_getNewIndex.begin(self, ((), _response, _ex, _sent, context))

        def end_getNewIndex(self, _r):
            return _M_Demo2.Printer._op_getNewIndex.end(self, _r)

        def findFile(self, filename, context=None):
            return _M_Demo2.Printer._op_findFile.invoke(self, ((filename, ), context))

        def findFileAsync(self, filename, context=None):
            return _M_Demo2.Printer._op_findFile.invokeAsync(self, ((filename, ), context))

        def begin_findFile(self, filename, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_findFile.begin(self, ((filename, ), _response, _ex, _sent, context))

        def end_findFile(self, _r):
            return _M_Demo2.Printer._op_findFile.end(self, _r)

        def getFullFileName(self, id, context=None):
            return _M_Demo2.Printer._op_getFullFileName.invoke(self, ((id, ), context))

        def getFullFileNameAsync(self, id, context=None):
            return _M_Demo2.Printer._op_getFullFileName.invokeAsync(self, ((id, ), context))

        def begin_getFullFileName(self, id, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_getFullFileName.begin(self, ((id, ), _response, _ex, _sent, context))

        def end_getFullFileName(self, _r):
            return _M_Demo2.Printer._op_getFullFileName.end(self, _r)

        def playFile(self, filename, context=None):
            return _M_Demo2.Printer._op_playFile.invoke(self, ((filename, ), context))

        def playFileAsync(self, filename, context=None):
            return _M_Demo2.Printer._op_playFile.invokeAsync(self, ((filename, ), context))

        def begin_playFile(self, filename, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_playFile.begin(self, ((filename, ), _response, _ex, _sent, context))

        def end_playFile(self, _r):
            return _M_Demo2.Printer._op_playFile.end(self, _r)

        def playFileFromArtiste(self, artiste, context=None):
            return _M_Demo2.Printer._op_playFileFromArtiste.invoke(self, ((artiste, ), context))

        def playFileFromArtisteAsync(self, artiste, context=None):
            return _M_Demo2.Printer._op_playFileFromArtiste.invokeAsync(self, ((artiste, ), context))

        def begin_playFileFromArtiste(self, artiste, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_playFileFromArtiste.begin(self, ((artiste, ), _response, _ex, _sent, context))

        def end_playFileFromArtiste(self, _r):
            return _M_Demo2.Printer._op_playFileFromArtiste.end(self, _r)

        def playFileFromSongAndArtiste(self, artiste, son, context=None):
            return _M_Demo2.Printer._op_playFileFromSongAndArtiste.invoke(self, ((artiste, son), context))

        def playFileFromSongAndArtisteAsync(self, artiste, son, context=None):
            return _M_Demo2.Printer._op_playFileFromSongAndArtiste.invokeAsync(self, ((artiste, son), context))

        def begin_playFileFromSongAndArtiste(self, artiste, son, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_playFileFromSongAndArtiste.begin(self, ((artiste, son), _response, _ex, _sent, context))

        def end_playFileFromSongAndArtiste(self, _r):
            return _M_Demo2.Printer._op_playFileFromSongAndArtiste.end(self, _r)

        def stopFile(self, context=None):
            return _M_Demo2.Printer._op_stopFile.invoke(self, ((), context))

        def stopFileAsync(self, context=None):
            return _M_Demo2.Printer._op_stopFile.invokeAsync(self, ((), context))

        def begin_stopFile(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_stopFile.begin(self, ((), _response, _ex, _sent, context))

        def end_stopFile(self, _r):
            return _M_Demo2.Printer._op_stopFile.end(self, _r)

        def pause(self, context=None):
            return _M_Demo2.Printer._op_pause.invoke(self, ((), context))

        def pauseAsync(self, context=None):
            return _M_Demo2.Printer._op_pause.invokeAsync(self, ((), context))

        def begin_pause(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_pause.begin(self, ((), _response, _ex, _sent, context))

        def end_pause(self, _r):
            return _M_Demo2.Printer._op_pause.end(self, _r)

        def resume(self, context=None):
            return _M_Demo2.Printer._op_resume.invoke(self, ((), context))

        def resumeAsync(self, context=None):
            return _M_Demo2.Printer._op_resume.invokeAsync(self, ((), context))

        def begin_resume(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_resume.begin(self, ((), _response, _ex, _sent, context))

        def end_resume(self, _r):
            return _M_Demo2.Printer._op_resume.end(self, _r)

        def uploadPart(self, id, part, context=None):
            return _M_Demo2.Printer._op_uploadPart.invoke(self, ((id, part), context))

        def uploadPartAsync(self, id, part, context=None):
            return _M_Demo2.Printer._op_uploadPart.invokeAsync(self, ((id, part), context))

        def begin_uploadPart(self, id, part, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_uploadPart.begin(self, ((id, part), _response, _ex, _sent, context))

        def end_uploadPart(self, _r):
            return _M_Demo2.Printer._op_uploadPart.end(self, _r)

        def uploadFile(self, id, filename, context=None):
            return _M_Demo2.Printer._op_uploadFile.invoke(self, ((id, filename), context))

        def uploadFileAsync(self, id, filename, context=None):
            return _M_Demo2.Printer._op_uploadFile.invokeAsync(self, ((id, filename), context))

        def begin_uploadFile(self, id, filename, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_uploadFile.begin(self, ((id, filename), _response, _ex, _sent, context))

        def end_uploadFile(self, _r):
            return _M_Demo2.Printer._op_uploadFile.end(self, _r)

        def scanFolder(self, context=None):
            return _M_Demo2.Printer._op_scanFolder.invoke(self, ((), context))

        def scanFolderAsync(self, context=None):
            return _M_Demo2.Printer._op_scanFolder.invokeAsync(self, ((), context))

        def begin_scanFolder(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_scanFolder.begin(self, ((), _response, _ex, _sent, context))

        def end_scanFolder(self, _r):
            return _M_Demo2.Printer._op_scanFolder.end(self, _r)

        def isPlaying(self, context=None):
            return _M_Demo2.Printer._op_isPlaying.invoke(self, ((), context))

        def isPlayingAsync(self, context=None):
            return _M_Demo2.Printer._op_isPlaying.invokeAsync(self, ((), context))

        def begin_isPlaying(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo2.Printer._op_isPlaying.begin(self, ((), _response, _ex, _sent, context))

        def end_isPlaying(self, _r):
            return _M_Demo2.Printer._op_isPlaying.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo2.PrinterPrx.ice_checkedCast(proxy, '::Demo2::Printer', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo2.PrinterPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo2::Printer'
    _M_Demo2._t_PrinterPrx = IcePy.defineProxy('::Demo2::Printer', PrinterPrx)

    _M_Demo2.PrinterPrx = PrinterPrx
    del PrinterPrx

    _M_Demo2.Printer = Ice.createTempClass()
    class Printer(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo2::Printer', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo2::Printer'

        @staticmethod
        def ice_staticId():
            return '::Demo2::Printer'

        def printString(self, s, current=None):
            raise NotImplementedError("servant method 'printString' not implemented")

        def renameFile(self, filename, newName, current=None):
            raise NotImplementedError("servant method 'renameFile' not implemented")

        def deleteFile(self, filename, current=None):
            raise NotImplementedError("servant method 'deleteFile' not implemented")

        def getNewIndex(self, current=None):
            raise NotImplementedError("servant method 'getNewIndex' not implemented")

        def findFile(self, filename, current=None):
            raise NotImplementedError("servant method 'findFile' not implemented")

        def getFullFileName(self, id, current=None):
            raise NotImplementedError("servant method 'getFullFileName' not implemented")

        def playFile(self, filename, current=None):
            raise NotImplementedError("servant method 'playFile' not implemented")

        def playFileFromArtiste(self, artiste, current=None):
            raise NotImplementedError("servant method 'playFileFromArtiste' not implemented")

        def playFileFromSongAndArtiste(self, artiste, son, current=None):
            raise NotImplementedError("servant method 'playFileFromSongAndArtiste' not implemented")

        def stopFile(self, current=None):
            raise NotImplementedError("servant method 'stopFile' not implemented")

        def pause(self, current=None):
            raise NotImplementedError("servant method 'pause' not implemented")

        def resume(self, current=None):
            raise NotImplementedError("servant method 'resume' not implemented")

        def uploadPart(self, id, part, current=None):
            raise NotImplementedError("servant method 'uploadPart' not implemented")

        def uploadFile(self, id, filename, current=None):
            raise NotImplementedError("servant method 'uploadFile' not implemented")

        def scanFolder(self, current=None):
            raise NotImplementedError("servant method 'scanFolder' not implemented")

        def isPlaying(self, current=None):
            raise NotImplementedError("servant method 'isPlaying' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo2._t_PrinterDisp)

        __repr__ = __str__

    _M_Demo2._t_PrinterDisp = IcePy.defineClass('::Demo2::Printer', Printer, (), None, ())
    Printer._ice_type = _M_Demo2._t_PrinterDisp

    Printer._op_printString = IcePy.Operation('printString', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, ())
    Printer._op_renameFile = IcePy.Operation('renameFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_deleteFile = IcePy.Operation('deleteFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_getNewIndex = IcePy.Operation('getNewIndex', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), ())
    Printer._op_findFile = IcePy.Operation('findFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), _M_Demo2._t_strList, False, 0), ())
    Printer._op_getFullFileName = IcePy.Operation('getFullFileName', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())
    Printer._op_playFile = IcePy.Operation('playFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_playFileFromArtiste = IcePy.Operation('playFileFromArtiste', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_playFileFromSongAndArtiste = IcePy.Operation('playFileFromSongAndArtiste', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_stopFile = IcePy.Operation('stopFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    Printer._op_pause = IcePy.Operation('pause', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    Printer._op_resume = IcePy.Operation('resume', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    Printer._op_uploadPart = IcePy.Operation('uploadPart', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0), ((), _M_Demo2._t_byteSeq, False, 0)), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_uploadFile = IcePy.Operation('uploadFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_bool, False, 0), ())
    Printer._op_scanFolder = IcePy.Operation('scanFolder', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), _M_Demo2._t_strList, False, 0), ())
    Printer._op_isPlaying = IcePy.Operation('isPlaying', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_bool, False, 0), ())

    _M_Demo2.Printer = Printer
    del Printer

# End of module Demo2
